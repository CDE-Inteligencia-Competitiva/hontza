<?php
/*
  Copyright (C) 2008 by Phase2 Technology.
  Author(s): Frank Febbraro, Irakli Nadareishvili

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License.
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY. See the LICENSE.txt file for more details.

*/
/**
 * @file
 */

/**
 * Implementation of hook_menu().
 */
function calais_tagmods_menu() {
  $items = array();
  
  $items['admin/settings/calais/calais-tagmods'] = array(
    'title' => 'Calais Tag Modifications',
    'description' => 'Configurations for Calais Tag Modifications',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('calais_tagmods_settings'),
    'access arguments' => array('administer calais'),
    'type' => MENU_LOCAL_TASK
  );

  return $items;
}

/**
 * Build the admin settings form.
 */
function calais_tagmods_settings() {
  $form = array();
  
  $form['calais_tag_blacklist'] = array(
    '#type' => 'textarea',
    '#title' => t('Calais Blacklist'),
    '#default_value' => variable_get('calais_tag_blacklist', NULL),
    '#rows' => 6,
    '#description' => t('Prevent terms from being suggested by Calais using a comma-separated list.  Example: funny, bungee jumping, "Company, Inc."'),
  );
  
  $form['calais_tag_rename'] = array(
    '#type' => 'textarea',
    '#title' => t('Calais Rename'),
    '#default_value' => variable_get('calais_tag_rename', NULL),
    '#rows' => 6,
    '#description' => t('Customize Calais term names using key-value pairs (one option per line).  Example: OldName=NewName'),
  );
  
  $form = system_settings_form($form);
  return $form;
}

/**
 * Implementation of hook_calais_preprocess.
 *
 * Make sure that a vocabulary exists for all entities returned, if not, create it.
 */
function calais_tagmods_calais_preprocess($node, &$keywords) {
  _calais_tagmods_apply_blacklist($keywords);
  _calais_tagmods_apply_rename($keywords);
}

/**
 * Filter out unwanted keywords
 */
function _calais_tagmods_apply_blacklist(&$keywords) {
  
  $bl_string = variable_get('calais_tag_blacklist', NULL);
  $blacklist = drupal_explode_tags($bl_string);
  foreach ($keywords as $cat => &$metadata) {
    foreach ($blacklist as $index => $blterm) {
      $metadata->remove_term_by_name($blterm);
    }
  }
}

/**
 * Rename keywords.
 */
function _calais_tagmods_apply_rename(&$keywords) {

  $sub_string = variable_get('calais_tag_rename', NULL);
  $rows = explode("\n", $sub_string);
  $subs = array();
  foreach ($rows as $row) {
    $row = trim($row);
    if (!empty($row)) {
      preg_match('/^(.*)=(.*)$/', $row, $matches);
      $subs[$matches[1]] = $matches[2];
    }
  }

  $sub_keys = array_keys($subs);
  foreach ($keywords as $cat => &$metadata) {
    foreach ($metadata->terms as &$term) {
      if (in_array($term->value, $sub_keys)) {
        $term->value = $subs[$term->value];
        _calais_tagmods_rename_term($term);
      }
    }
  }
}

/**
 * Rename the term in both the calais term table and the taxonomy table, but only if the GUIDs match.
 */
function _calais_tagmods_rename_term($term) {
  // Rename the calais term
  db_query("UPDATE {calais_term} SET name = '%s' 
            WHERE guid IS NOT NULL AND guid = '%s' AND name != '%s'", $term->name, $term->guid, $term->name);
  
  // Rename the taxonomy term
  db_query("UPDATE {term_data} t SET t.name = '%s' 
            WHERE t.tid = (SELECT ct.tdid FROM {calais_term} ct WHERE ct.guid = '%s')", $term->name, $term->guid);
}

