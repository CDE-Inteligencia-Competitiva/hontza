<?php
function kimonolabs_perm() {
  return array();
}
function kimonolabs_menu() {
    $items=array();   
    return $items;
}
function kimonolabs_is_kimonolabs_activado(){
    if(defined('_IS_KIMONOLABS') && _IS_KIMONOLABS==1){
        return 1;
    }
    return 0;
}
function kimonolabs_set_fuente_is_kimonolabs(&$fuente){
    if(!kimonolabs_is_fuente_kimonolabs($fuente)){
        $fuente->field_is_kimonolabs[0]['value']=0;
        if(isset($_REQUEST['is_kimonolabs']) && !empty($_REQUEST['is_kimonolabs'])){
            $fuente->field_is_kimonolabs[0]['value']=1;
        }
    }
}
function kimonolabs_supercanal_wizard_nombre_form_add_kimonolabs_api_key_form_field(&$fuente,&$form,&$form_state){
    if(kimonolabs_is_fuente_kimonolabs($fuente)){
        $form['kimonolabs_api_key'] = array(
          '#title' => 'Kimonolabs Api Key',
          '#type' => 'textfield',
          '#size' => 30,
          '#required' => TRUE,
        );
        //intelsat-2016
        $kimonolabs_api_key=kimonolabs_get_grupo_kimonolabs_api_key();
        if(!empty($kimonolabs_api_key)){
            $form['kimonolabs_api_key']['#default_value']=$kimonolabs_api_key;
        }
    }    
}
function kimonolabs_is_fuente_kimonolabs($fuente_in,$canal=''){
    $fuente='';
    if(isset($fuente_in->type) && !empty($fuente_in->type)){
        $fuente=$fuente_in;
    }else{
        $fuente=hontza_get_fuente($canal);
    }
    //
    if(isset($fuente->field_is_kimonolabs) && isset($fuente->field_is_kimonolabs[0])){
         if(isset($fuente->field_is_kimonolabs[0]['value']) && !empty($fuente->field_is_kimonolabs[0]['value'])){
             return 1;
         }
    }
    return 0;
}
function kimonolabs_supercanal_wizard_nombre_form_submit_add_fuente_kimonolabs_api_key(&$fuente,&$form,&$form_state){
    if(kimonolabs_is_fuente_kimonolabs($fuente)){  
        $fuente->field_kimonolabs_api_key=array();
        $fuente->field_kimonolabs_api_key[0]['value']=$form_state['values']['kimonolabs_api_key'];
    }    
}
function kimonolabs_supercanal_wizard_nombre_form_set_kimonolabs_titles(&$fuente,&$form,&$form_state){
    if(kimonolabs_is_fuente_kimonolabs($fuente)){
        $form['pipe_id']['#title'] = 'Kimonolabs ID';
        $form['titulo']['#title']=t('Name of Source');
    }
}
function kimonolabs_valor_args_form_set_tipo(&$form, &$form_state){
    return 0;
}
function kimonolabs_get_previsualizacion_canal_html($nodo,&$form,&$form_state){
    $kimonolab_url=kimonolabs_get_kimonolab_url($nodo,'json');
    $kimonolab_url=kimonolabs_add_url_parameters($kimonolab_url,$nodo,$form_state);
    $content=file_get_contents($kimonolab_url);
    $content=json_decode($content);
    
    $html=array();
    if(isset($content->results) && !empty($content->results)){
        $html[]='<div style="padding-bottom:10px;">';
        $html[]='<ul>';                
        foreach($content->results as $collection_field=>$result){
            if(kimonolabs_is_collection_field($collection_field)){
                if(!empty($result)){
                    foreach($result as $i=>$r){
                        $title='';
                        $href='';
                        $item_info=kimonolabs_item_info($r);
                        $title=$item_info['title'];
                        $href=$item_info['href'];
                        if(!empty($href) && !empty($title)){
                            $html[]='<li>'.l($title,$href,array('attributes'=>array('target'=>'_blank'),'absolute'=>true)).'</li>';
                        }    
                    }               
                }
            }
        }
        $html[]='</ul>';
        $html[]='</div>';
    }
    return implode('',$html);
}
function kimonolabs_get_kimonolab_url($fuente,$kimonolabs_type='rss'){
    $kimonolabs_id=kimonolabs_get_kimonolabs_id($fuente);
    $kimonolabs_api_key=kimonolabs_get_kimonolabs_api_key($fuente);
    $kimonolabs_base_url=kimonolabs_get_kimonolabs_base_url();
    $result=$kimonolabs_base_url.$kimonolabs_type.'/ondemand/'.$kimonolabs_id.'?apikey='.$kimonolabs_api_key;
    return $result;
}    
function kimonolabs_get_kimonolabs_id($fuente){
    if(isset($fuente->field_supercanal_fuente) && isset($fuente->field_supercanal_fuente[0])){
        if(isset($fuente->field_supercanal_fuente[0]['value']) && !empty($fuente->field_supercanal_fuente[0]['value'])){
            return $fuente->field_supercanal_fuente[0]['value'];
        }
    }
    return '';
}
function kimonolabs_get_kimonolabs_api_key($fuente){
    if(isset($fuente->field_kimonolabs_api_key) && isset($fuente->field_kimonolabs_api_key[0])){
        if(isset($fuente->field_kimonolabs_api_key[0]['value']) && !empty($fuente->field_kimonolabs_api_key[0]['value'])){
            return $fuente->field_kimonolabs_api_key[0]['value'];
        }
    }
    return '';
}
function kimonolabs_add_url_parameters($kimonolab_url,$nodo,&$form_state){
    $result=$kimonolab_url;
    foreach ($nodo->field_supercanal_args as $arg){
        //if(!empty($arg['value']) && !in_array($arg['value'],array('not'))){
            if(!empty($form_state['canal_obj']->$arg['value'])){
                //$result.='&'.$arg['value'].'='.set_pipe_param($form_state['canal_obj']->$arg['value']);
                $result.='&'.$arg['value'].'='.$form_state['canal_obj']->$arg['value'];
            }
        //}
    }    
    return $result;
}
function kimonolabs_get_kimonolabs_base_url(){
    return 'https://www.kimonolabs.com/api/';
}
function kimonolabs_add_canal_feeds($nodo,$params,$form_state){
    //$kimonolab_url=kimonolabs_get_kimonolab_url($nodo,'rss');
    $kimonolab_url=kimonolabs_get_kimonolab_url($nodo,'json');
    $kimonolab_url.='&'.$params;
    $form_state['canal_obj']->feeds = array('FeedsHTTPFetcher' => array('source' => $kimonolab_url));    
}
function kimonolabs_set_item_parse($source,$item){
    echo print_r($source,1);
    echo print_r($item,1);
    exit();
}
function kimonolabs_set_supercanal_wizard_title_labels(&$form_info,$fuente){
    if(kimonolabs_is_fuente_kimonolabs($fuente)){
        $form_info['order']['supercanal_wizard_nombre']=t('Step 1: Name and ID of Kimonolabs');
        drupal_set_title(t('Add Source (Kimonolabs)'));        
    }
}
function kimonolabs_get_is_kimonolabs_json_feedsSource($batch,$source){
    $canal=node_load($source->feed_nid);
    $fuente=node_load($canal->field_nid_fuente_canal[0]['value']);
    if(isset($fuente->nid) && !empty($fuente->nid)){
        if(kimonolabs_is_fuente_kimonolabs($fuente)){
            $config=$source->getConfig();
            $url=$config['FeedsHTTPFetcher']['source'];
            $kimonolabs_base_url=kimonolabs_get_kimonolabs_base_url();
            $comp=$kimonolabs_base_url.'json/ondemand/';
            $pos=strpos($url,$comp);
            if($pos===FALSE){
                $comp=$kimonolabs_base_url.'ondemand/';
                $pos=strpos($url,$comp);
                if($pos===FALSE){
                    return 0;
                }
                return 1;
            }
            return 1;
        }
    }
    return 0;
}
function kimonolabs_FeedsSyndicationParser(FeedsImportBatch &$batch, FeedsSource $source){
    $config=$source->getConfig();
    $url=$config['FeedsHTTPFetcher']['source'];
    $content = $batch->getRaw();
    $content=json_decode($content);
    $batch->title = $content->name;
    $batch->description = '';
    $batch->link = $content->url;
    if(isset($content->results) && !empty($content->results)){
        foreach($content->results as $collection_field=>$result){
            if(kimonolabs_is_collection_field($collection_field)){
                if(!empty($result)){
                    foreach($result as $i=>$r){
                        /*if (is_array($result['items'])) {
                            foreach ($result['items'] as $item) {
                              if (isset($item['geolocations'])) {
                                foreach ($item['geolocations'] as $k => $v) {
                                  $item['geolocations'][$k] = new FeedsGeoTermElement($v);
                                }
                              }
                              $batch->items[] = $item;
                            }
                        }*/

                        $title='';
                        $href='';
                        $item_info=kimonolabs_item_info($r);
                        $title=$item_info['title'];
                        $href=$item_info['href'];
                        if(!empty($title) && !empty($href)){
                            $item=array();
                            $item['title']=$title;
                            $item['link']=$href;
                            $item['guid']=$item['link'];
                            $item['url']=$item['link'];
                            kimonolabs_item_description($r,$item);
                            /*$item=new stdClass();
                            $item->title=$r->title->text;
                            $item->link=$r->title->href;
                            $item->guid=$item->link;
                            $item->description='';
                            if(isset($r->description) && !empty($r->description)){
                                $item->description=$r->description;
                            }*/
                            $batch->items[] =$item;
                        }    
                    }
                }
            }    
        }    
    }
}
function kimonolabs_set_arg_value($arg_value,$supercanal){
    $result=$arg_value;
    if(kimonolabs_is_fuente_kimonolabs($supercanal)){
        if($result=='q'){
            $result='my_q';
        }else if($result=='my_q'){
            $result='q';
        }
        $result=str_replace('.','_punto_',$result);        
    }
    return $result;
}
function kimonolabs_argumentos_canal_de_supercanal_presave(&$node){
    if($node->type=='canal_de_supercanal'){
                $url_rss='';
                if(isset($node->feeds) && isset($node->feeds['FeedsHTTPFetcher']) && isset($node->feeds['FeedsHTTPFetcher']['source']) && !empty($node->feeds['FeedsHTTPFetcher']['source'])){
                    $url_rss=$node->feeds['FeedsHTTPFetcher']['source'];
                    $url_new=kimonolabs_set_url_presave($url_rss,$node);
                    if(isset($_REQUEST['filtro_parametros']) && !empty($_REQUEST['filtro_parametros'])){
                            $url_new=kimonolabs_set_canal_supercanal_filtros($_REQUEST['filtro_parametros'],$url_new);
                            $node->feeds['FeedsHTTPFetcher']['source']=$url_new;                                                    
                    }                   
                }         
    }
}
function kimonolabs_add_kimonolabs_api_key_form_field(&$form,$node){
        $info_kimonolabs_url=kimonolabs_get_info_kimonolabs_url($node);
        if(!empty($info_kimonolabs_url)){
            $form['my_pipe_id']=array(
                '#title'=>'Kimonolabs Api Key',
                '#type'=>'textfield',
                '#default_value'=>$info_kimonolabs_url['kimonolabs_api_key'],
            );            
            $form['kimonolabs_id']=array(
                '#title'=>'Kimonolabs ID',
                '#type'=>'textfield',
                '#default_value'=>$info_kimonolabs_url['kimonolabs_id'],
            );
        }    
}
function kimonolabs_get_info_kimonolabs_url($node){
    $info_kimonolabs_url=array();
    $feeds_source=hontza_get_feeds_source($node->nid);
    $config=unserialize($feeds_source->config);
    $url_rss=$config['FeedsHTTPFetcher']['source'];
    if(!empty($url_rss)){
        $s='/ondemand/';
        $pos=strpos($url_rss,$s);
        if($pos===FALSE){
            return $info_kimonolabs_url;
        }else{
            $result=substr($url_rss,$pos+strlen($s));
            $pos=strpos($result,'?');
            if($pos===FALSE){
                return $info_kimonolabs_url;
            }else{
                $kimonolabs_id=substr($result,0,$pos);
                $result=substr($result,$pos+1);                
                $info_kimonolabs_url['kimonolabs_id']=$kimonolabs_id;
                $result=str_replace('apikey=','',$result);
                $pos=strpos($result,'&');
                if($pos===FALSE){
                     return $info_kimonolabs_url;
                }else{
                    $kimonolabs_api_key=substr($result,0,$pos);
                    $info_kimonolabs_url['kimonolabs_api_key']=$kimonolabs_api_key;
                }
            }    
        }
    }                
    return $info_kimonolabs_url;
}
function kimonolabs_set_url_presave($url_rss,$node){
    $result='';
    $kimonolabs_api_key=$node->my_pipe_id;
    $kimonolabs_id=$node->kimonolabs_id;
    $kimonolabs_base_url=kimonolabs_get_kimonolabs_base_url();
    $result=$kimonolabs_base_url.'json/ondemand/'.$kimonolabs_id.'?apikey='.$kimonolabs_api_key;
    /*$pos=strpos($url_rss,'apikey=');
    if($pos===FALSE){
        return $url_rss;
    }else{
        $query_string=substr($url_rss,$pos);
        $query_array=explode('&',$query_string);
        if(count($query_array)>=2){
            unset($query_array[0]);
            $query_string=implode('&',$query_array);
            $result.='&'.$query_string;
        }
    }*/
    return $result;
}
function kimonolabs_set_canal_supercanal_filtros($filtro,$url){
    $result=$url;
    $params='';
    if(!empty($filtro)){
        $my_array=array();
        foreach($filtro as $name=>$value){
            $my_array[]=$name.'='.urlencode($value);
        }
        $params=implode('&',$my_array);
    }
    if(!empty($params)){
        $result.='&'.$params;
    }
    return $result;
}
function kimonolabs_add_origin_value_form_field_canal(&$form,$node){
    if(isset($node->nid) && !empty($node->nid)){
        if(kimonolabs_is_fuente_kimonolabs('',$node)){
            $form['field_fuente_canal'][0]['#default_value']['value']='Kimonolabs';
        }
    }
}
function kimonolabs_item_info($r){ 
    $item_info=array();
    $item_info['title']='';
    $item_info['href']='';
    /*if(isset($r->title)){
        $title=$r->title->text;
        $href=$r->title->href;
    }else if(isset($r->Title)){
        $title=$r->Title->text;
        $href=$r->Title->href;
    }else if(isset($r->link)){
        $title=$r->link->text;
        $href=$r->link->href;
    }else if(isset($r->property1)){
        $title=$r->property1->text;
        $href=$r->property1->href;
    }*/
    if(!empty($r)){
        foreach($r as $f=>$row){
            if(kimonolabs_is_item_field($f)){
                if(isset($row->text) && isset($row->href)){
                    $title=$row->text;
                    $href=$row->href;    
                }else if($f=='title'){
                    $title=$row;                    
                }else if($f=='url'){
                    $href=$row;                    
                }
            }    
        }
    }
    $item_info['title']=$title;
    $item_info['href']=$href;                
    return $item_info;                
}                    
function kimonolabs_is_collection_field($collection_field){
    if(in_array($collection_field,array('collection1'))){
        return 1;
    }
    return 0;
}
function kimonolabs_item_description($r,&$item){
    $item['description']='';
    if(isset($r->description) && !empty($r->description)){
        if(isset($r->description->text)){
            $item['description']=$r->description->text;
        }else if(is_array($r->description)){
            //$item['description']=$r->description[0]->text;
            foreach($r->description as $i=>$row){
                if(!empty($item['description'])){
                    $item['description'].=' ';
                }
                if(isset($row->text)){
                    $item['description'].=$row->text;
                }    
            }
        }else{
            $item['description']=$r->description;
        }            
    }else if(isset($r->resumen) && !empty($r->resumen)){
        if(isset($r->resumen->text)){
            $item['description']=$r->resumen->text;
        }else{
            $item['description']=$r->resumen;
        }    
    }else if(isset($r->Resumen) && !empty($r->Resumen)){
        $item['description']=$r->Resumen;
    }if(isset($r->descripcion) && !empty($r->descripcion)){
        if(isset($r->description->text)){
            $item['description']=$r->descripcion->text;
        }else{
            $item['description']=$r->descripcion;
        }            
    }
}
function kimonolabs_is_item_field($field){
    if(!in_array($field,array('description','property2','resumen','descripcion'))){
        return 1;
    }
    return 0;
}
//intelsat-2015
function kimonolabs_get_enlace_fuente_del_canal_view_html($node,$result_in,$feeds_source){
    $result=$result_in;
    if(kimonolabs_is_fuente_kimonolabs('',$node)){
        $info_kimonoapis=kimonolabs_get_info_kimonoapis($node);
        if(isset($info_kimonoapis->targeturl) && !empty($info_kimonoapis->targeturl)){            
            $result=$info_kimonoapis->targeturl;
            $params=kimonolabs_get_url_params($result_in);            
            if(!empty($params)){
                $result=kimonolabs_set_enlace($result,$params);
                /*if(isset($info_url['query']) && !empty($info_url['query'])){
                    $params='&'.$params;
                }else{
                    $params='?'.$params;
                }*/
            }    
            //$result.=$params;
        }    
    }
    return $result;
}
//intelsat-2015
function kimonolabs_get_info_kimonoapis($node){
    $info_kimonolabs_url=kimonolabs_get_info_kimonolabs_url($node);
    $url_kimonoapis='https://www.kimonolabs.com/kimonoapis/'.$info_kimonolabs_url['kimonolabs_id'].'?apikey='.$info_kimonolabs_url['kimonolabs_api_key'].'&';
    $content=file_get_contents($url_kimonoapis);
    $result=json_decode($content);
    return $result;
}
//intelsat-2015
function kimonolabs_get_url_params($result_in){
    $result=array();
    $info_url = parse_url($result_in);
    red_parse_str($info_url['query'], $query);
    if(!empty($query)){
        foreach($query as $field=>$value){
            if(in_array($field,array('apikey'))){
                continue;
            }
            $result[]=$field.'='.$value;
        }
    }
    if(!empty($result)){
        $result=implode('&',$result);        
    }else{
        $result='';
    }
    return $result;
}
//intelsat-2015
function kimonolabs_set_enlace($result_in,$params_in){
    $result=$result_in;
    $info_url = parse_url($result);
    if(isset($info_url['query']) && !empty($info_url['query'])){
        red_parse_str($params_in,$params_query);
        if(!empty($params_query)){
            $my_query=$info_url['query'];
            red_parse_str($my_query,$query);
            foreach($query as $field=>$value){
                if(isset($params_query[$field])){
                    $query[$field]=$params_query[$field];
                }
            }
            $query=kimonolabs_set_params_query($query,$params_query);
            $result=$info_url['scheme'].'://'.$info_url['host'].$info_url['path'];
            if(!empty($query)){
                $result.='?'.$query;
            }
        }        
    }
    return $result;
}
//intelsat-2015
function kimonolabs_set_params_query($query,$params_query){
    $result=$query;
    if(!empty($params_query)){
        foreach($params_query as $field=>$value){
                if(!isset($result[$field])){
                    $result[$field]=$params_query[$field];
                }
        }
    }
    if(!empty($result)){
        $my_array=array();
        foreach($result as $f=>$my_value){
            $my_array[]=$f.'='.$my_value;
        }
        $result=implode('&',$my_array);
    }
    return $result;
}
//intelsat-2015
function kimonolabs_is_kimonolabs_json($content){
    json_decode($content);
    return (json_last_error() == JSON_ERROR_NONE);
}
//intelsat-2015
function kimonolabs_is_kimonolabs_json_url($url){
    $content=file_get_contents($url);
    return kimonolabs_is_kimonolabs_json($content);
}
//intelsat-2016
function kimonolabs_get_grupo_kimonolabs_api_key($grupo_node=''){
    if(!(isset($grupo_node->nid) && !empty($grupo_node->nid))){
        $my_grupo=og_get_group_context();
        if(isset($my_grupo->nid) && !empty($my_grupo->nid)){
           $grupo_node=$my_grupo;
        }
    }
    if(isset($grupo_node->field_grupo_kimonolabs_api_key) && isset($grupo_node->field_grupo_kimonolabs_api_key[0])){
        if(isset($grupo_node->field_grupo_kimonolabs_api_key[0]['value'])){
            return $grupo_node->field_grupo_kimonolabs_api_key[0]['value'];
        }
    }
    return '';
}