<?php
function busqueda_rss_perm() {
  return array();
}
function busqueda_rss_menu() {
    $items=array();
    $items['busqueda_rss/exportar_busqueda_rss/%'] = array(
    'title' => 'Export',
    'page callback' => 'busqueda_rss_exportar_busqueda_rss_callback',
    'access arguments'=>array('access content'),    
  );
    $items['busqueda_rss/simular_cron'] = array(
    'title' => 'Export',
    'page callback' => 'busqueda_rss_simular_cron_callback',
    'access arguments'=>array('root'),    
  );
    $items['busqueda_rss/custom_exportar_busqueda_rss/%'] = array(
    'title' => 'Export',
    'page callback' => 'busqueda_rss_custom_exportar_busqueda_rss_callback',
    'access arguments'=>array('access content'),    
  );
    $items['busqueda_rss/custom_cron'] = array(
    'title' => 'Export',
    'page callback' => 'busqueda_rss_custom_cron_callback',
    'access callback'=>TRUE,    
  );
    return $items;
}
function busqueda_rss_exportar_busqueda_rss_callback(){
    //$nid_array=busqueda_rss_get_busqueda_view_nid_array();
    $canal_nid=arg(2);
    $canal_node=node_load($canal_nid);
    if(isset($canal_node->field_canal_busqueda_busqueda[0]['value']) && !empty($canal_node->field_canal_busqueda_busqueda[0]['value'])){
        $canal_node->node_data_field_canal_busqueda_busqueda_field_canal_busqueda_busqueda_value=$canal_node->field_canal_busqueda_busqueda[0]['value'];        
    }
    $url_solr_search=hontza_solr_search_get_left_link_rss($canal_node,1);    
    /*if(hontza_is_sareko_id('ROOT') && user_access('root')){
      echo print_r($url_solr_search,1);exit();
    }*/
    if(empty($url_solr_search)){
        $nid_array=busqueda_rss_get_busqueda_view_nid_array($canal_nid);
        busqueda_rss_node_feed($nid_array,array(),$canal_nid);
    }else{
       drupal_goto($url_solr_search['path'],$url_solr_search['query'].'&is_enviar_mail=1');
    }
    exit();
}
function busqueda_rss_get_busqueda_view_nid_array($canal_nid_in=''){
    $result=array();
    if(!empty($canal_nid_in)){
        if(hontza_canal_rss_is_canal_busqueda_solr($canal_nid_in)){
            $canal_busqueda=node_load($canal_nid_in);
            $result=alerta_solr_get_canal_busqueda_nid_array($canal_busqueda);
            return $result;
        }else{
            $info=busqueda_rss_get_info_canal_busqueda($canal_nid_in);
            if(!empty($info['my_grupo_nid'])){
                my_carpeta_dinamica_pre_execute($view,$info['my_request'],$info['my_grupo_nid'],0,1);
            }else{
                return $result;
            }
        }
    }else{
        my_carpeta_dinamica_pre_execute($view);
    }
    if(isset($view->build_info['query']) && !empty($view->build_info['query'])){
        $sql=$view->build_info['query'];
        $res=db_query($sql);
        while($row=db_fetch_object($res)){
            //intelsat-2015
            if(busqueda_rss_is_validado($row->nid)){
            //if(busqueda_rss_is_validado($row->nid) && busqueda_rss_is_destacado($row->nid)){    
                $result[]=$row->nid;
            }
        }
    }
    return $result;
}
function busqueda_rss_node_feed($nids = FALSE, $channel = array(),$canal_nid_in='',$is_categoria_exportar_rss=0,$type='',$is_custom_exportar_busqueda_rss=0) {
  global $base_url, $language;
  if ($nids === FALSE) {
    $nids = array();
    $result = db_query_range(db_rewrite_sql('SELECT n.nid, n.created FROM {node} n WHERE n.promote = 1 AND n.status = 1 ORDER BY n.created DESC'), 0, variable_get('feed_default_items', 10));
    while ($row = db_fetch_object($result)) {
      $nids[] = $row->nid;
    }
  }
  //$item_length = variable_get('feed_item_length', 'teaser');
  //intelsat-2015
  $item_length ='my_content';
  if($is_categoria_exportar_rss){
      $item_length ='fulltext';
  }    
  //
  $namespaces = array('xmlns:dc' => 'http://purl.org/dc/elements/1.1/');
  $items = '';

  foreach ($nids as $nid) {
    // Load the specified node:
    $item = node_load($nid);
    
    $item->build_mode = NODE_BUILD_RSS;
    if(!$is_categoria_exportar_rss){
        $item->link = url("node/$nid", array('absolute' => TRUE));
    }else{
        $node_url=publico_get_node_url('node/'.$item->nid,$item);
        $item->link = url($node_url, array('absolute' => TRUE));
    }
    if ($item_length != 'title') {
      $teaser = ($item_length == 'teaser') ? TRUE : FALSE;

      // Filter and prepare node teaser
      if (node_hook($item, 'view')) {
        $item = node_invoke($item, 'view', $teaser, FALSE);
      }
      else {
        $item = node_prepare($item, $teaser);
      }
      // Allow modules to change $node->content before the node is rendered.
      node_invoke_nodeapi($item, 'view', $teaser, FALSE);
      // Set the proper node property, then unset unused $node property so that a
      // bad theme can not open a security hole.
      $content = drupal_render($item->content);
      if ($teaser) {
        $item->teaser = $content;
        unset($item->body);
      }
      else {
        if(!$is_categoria_exportar_rss){
          $item->body = $content;
        }
        unset($item->teaser);
      }
    
      // Allow modules to modify the fully-built node.
      node_invoke_nodeapi($item, 'alter', $teaser, FALSE);
    }

    // Allow modules to add additional item fields and/or modify $item
    $extra = node_invoke_nodeapi($item, 'rss item');
    $extra = array_merge($extra, array(array('key' => 'pubDate', 'value' => gmdate('r', $item->created)), array('key' => 'dc:creator', 'value' => $item->name), array('key' => 'guid', 'value' => $item->nid .' at '. $base_url, 'attributes' => array('isPermaLink' => 'false'))));
    foreach ($extra as $element) {
      if (isset($element['namespace'])) {
        $namespaces = array_merge($namespaces, $element['namespace']);
      }
    }

    // Prepare the item description
    switch ($item_length) {
      case 'fulltext':
        $item_text = $item->body;
        break;
      case 'teaser':
        $item_text = $item->teaser;
        if (!empty($item->readmore)) {
          $item_text .= '<p>'. l(t('read more'), 'node/'. $item->nid, array('absolute' => TRUE, 'attributes' => array('target' => '_blank'))) .'</p>';
        }
        break;
      case 'title':
        $item_text = '';
        break;
      case 'my_content':
        $item_text=hontza_content_resumen($item,0,0);  
        break;  
    }
    $link=$item->link;
    $link=red_exportar_rss_get_item_link($item);
    $items .= busqueda_rss_format_rss_item($item->title,$link, $item_text, $extra,$item);
  }

  $channel_defaults = array(
    'version'     => '2.0',
    'title'       => variable_get('site_name', 'Drupal'),
    'link'        => $base_url,
    'description' => variable_get('site_mission', ''),
    'language'    => $language->language
  );
  
  if($is_categoria_exportar_rss){
      busqueda_rss_set_channel_defaults($type,$channel_defaults);
  }
  
  if(!empty($canal_nid_in)){
      $canal_nid=$canal_nid_in;  
  }else{
      $canal_nid=arg(2);
  }
  
  $node_canal=node_load($canal_nid);
  
  $channel = array_merge($channel_defaults, $channel);
  $channel['title']=
  $output = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
  $output .= "<rss version=\"". $channel["version"] ."\" xml:base=\"". $base_url ."\" ". drupal_attributes($namespaces) .">\n";
  $output .= format_rss_channel($node_canal->title, $channel['link'], $channel['description'], $items, $channel['language']);
  $output .= "</rss>\n";

  if(!$is_categoria_exportar_rss){    
    $sites_filename=red_exportar_rss_canal_get_sites_filename($canal_nid);
    $xml_url=red_exportar_rss_canal_get_xml_url_name($canal_nid);
    
      $file = fopen($sites_filename,"w");
      //intelsat-2015
      if ($file===false){
            
      }else{
            $rssfeed=$output;
            fputs($file,$rssfeed);
            fclose($file);
      }
      //intelsat-2015
      if(!hontza_is_user_anonimo()){
        $param1=arg(1);
        if($param1!='simular_cron'){
          //file_put_contents($sites_filename,$rssfeed);
          if(hontza_canal_rss_is_publico_exportar_rss_activado($canal_nid)){
            drupal_goto('canales_rss/'.$canal_nid.'/red_exportar_rss/enviar_mail');  
            //$destination=red_copiar_get_popup_destination('?');  
            //drupal_goto('canales_rss/'.$canal_nid.'/red_exportar_rss/enviar_mail'.$destination);
            //intelsat-2015
            exit();
          }

          if(empty($canal_nid_in) || $is_custom_exportar_busqueda_rss){
              drupal_goto($xml_url);
          }
        }  
      }
  }else{
      drupal_set_header('Content-Type: application/rss+xml; charset=utf-8');
      print $output;  
  }
}
function busqueda_rss_format_rss_item($title, $link, $description, $args = array(),$item='') {
  $output = "<item>\n";
  $output .= ' <title>'. check_plain($title) ."</title>\n";
  $output .= ' <link>'. check_url($link) ."</link>\n";
  $output .= ' <description>'. check_plain($description) ."</description>\n";
  $output .= busqueda_rss_format_xml_elements($args);
  $output .='<created>' . date("Y-m-d H:i:s",$item->created) . '</created>';
  $output .= '<tags>'.red_exportar_rss_get_item_tags_format_xml($item).'</tags>';
  $output .= '<comments>'.red_exportar_rss_get_item_comments_format_xml($item).'</comments>';
  $output .= "</item>\n";

  return $output;
}
function busqueda_rss_is_validado($nid){
  //$node=node_load($nid);
  $leido_interesante=get_leido_interesante($nid);
  if(isset($leido_interesante->fid) && !empty($leido_interesante->fid) && $leido_interesante->fid==2){
      return 1;
  }
  return 0;
}
function busqueda_rss_format_xml_elements($array) {
  $output = '';
  foreach ($array as $key => $value) {
    if(!in_array($key,array('comments','category'))){
        if (is_numeric($key)) {
          if ($value['key']) {
            $output .= ' <'. $value['key'];
            if (isset($value['attributes']) && is_array($value['attributes'])) {
              $output .= drupal_attributes($value['attributes']);
            }

            if (isset($value['value']) && $value['value'] != '') {
              $output .= '>'. (is_array($value['value']) ? busqueda_rss_format_xml_elements($value['value']) : check_plain($value['value'])) .'</'. $value['key'] .">\n";
            }
            else {
              $output .= " />\n";
            }
          }
        }
        else {
          $output .= ' <'. $key .'>'. (is_array($value) ? busqueda_rss_format_xml_elements($value) : check_plain($value)) ."</$key>\n";
        }
    }    
  }
  return $output;
}
function busqueda_rss_cron(){
    //intelsat-2016
    if(defined('_IS_BUSQUEDA_RSS_CRON') && _IS_BUSQUEDA_RSS_CRON==1){
        busqueda_rss_custom_cron();
    }
}
function busqueda_rss_exportar_busqueda_rss($canal_nid,$is_custom_exportar_busqueda_rss=0){
    $nid_array=busqueda_rss_get_busqueda_view_nid_array($canal_nid);
    busqueda_rss_node_feed($nid_array,array(),$canal_nid,0,'',$is_custom_exportar_busqueda_rss);        
}
function busqueda_rss_simular_cron_callback(){
    //return 'Funcion desactivada';
    busqueda_rss_custom_cron();
    return date('Y-m-d H:i');
}
function busqueda_rss_get_info_canal_busqueda($canal_nid_in){
    $canal=node_load($canal_nid_in);
    $url=$canal->field_canal_busqueda_busqueda[0]['value'];
    $info_url=parse_url($url);
    parse_str($info_url['query'],$query);
    $result=array();
    $result['my_request']=$query;
    $result['my_grupo_nid']='';    
    if(isset($canal->og_groups) && !empty($canal->og_groups)){
        $canal_nid_array=array_keys($canal->og_groups);
        $result['my_grupo_nid']=$canal_nid_array[0];        
    }
    return $result;
}
function busqueda_rss_set_channel_defaults($type,&$channel_defaults){
    global $base_url;
    if($type=='publico_vigilancia_canales_categorias_categoria_exportar_rss'){
        $tid=arg(3);
        $term_name=taxonomy_get_term_name_by_idioma($tid);
        if(!empty($term_name)){
            $channel_defaults['title']=$term_name;
            $grupo=visualizador_create_grupo_base_path();
            $channel_defaults['link']=$base_url.'/'.$grupo.'/publico/canales/categorias/'.$tid.'/ultimos';
            $channel_defaults['description']=busqueda_rss_get_categoria_description($tid);
        }  
    }else if($type=='rss_general'){
        $channel_defaults['title']='RSS';
    }
}
function busqueda_rss_get_categoria_description($tid){
    $result='';
    $row=taxonomy_get_term_by_language($tid);
    if(isset($row->description) && !empty($row->description)){
        $result=$row->description;
    }else{
        $term=taxonomy_get_term_by_language($tid);
        if(isset($term->description) && !empty($term->description)){
            $result=$term->description;
        }
    }
    return $result;
}
function busqueda_rss_is_destacado($nid){
    $node=node_load($nid);
    return red_is_node_destacado($node);
}
function busqueda_rss_get_nid_array_destacados($nid_array){
    $result=array();
    if(!empty($nid_array)){
        foreach($nid_array as $i=>$nid){    
            //intelsat-2016
            //if(busqueda_rss_is_validado($nid) && busqueda_rss_is_destacado($nid)){    
            if(busqueda_rss_is_validado($nid)){    
                $result[]=$nid;
            }
        }
    }
    return $result;
}
function busqueda_rss_custom_cron(){
    $canales=get_all_nodes(array('canal_busqueda'));
    if(!empty($canales)){
        foreach($canales as $i=>$canal){
            if(hontza_canal_rss_is_canal_busqueda_solr($canal->nid)){
                busqueda_rss_exportar_busqueda_rss($canal->nid);
            }else{
                //busqueda_rss_exportar_busqueda_rss($canal->nid);
            }    
        }
    }
}
function busqueda_rss_custom_exportar_busqueda_rss_callback(){
    $canal_nid=arg(2);
    $result=busqueda_rss_exportar_busqueda_rss($canal_nid,1);
    print $result;
    exit();
}
function busqueda_rss_custom_cron_callback(){
    busqueda_rss_custom_cron();    
}