<?php
// $Id: opensearch.install,v 1.1.2.9 2010/02/14 10:19:49 kiam Exp $

/**
 * @file
 * Install, update and uninstall functions for the opensearch module.
 */

/**
 * Implements hook_schema().
 */
function opensearch_schema() {
  $schema['opensearch'] = array(
    'description' => 'The table for the module settings.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary key.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The settings type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '-default-',
      ),
      'settings' => array(
        'description' => 'The settings content.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function opensearch_install() {
  drupal_install_schema('opensearch');
}

/**
 * Implements hook_uninstall().
 */
function opensearch_uninstall() {
  drupal_uninstall_schema('opensearch');

  variable_del('opensearch_enabled_types');
  variable_del('opensearch_enabled_feeds');
}

/**
 * Implements hook_update_N().
 */
function opensearch_update_6100() {
  $ret = array();
  $schema = array();
  $settings = array();
  $variables = array(
    'opensearch_adult_content' => array(FALSE, 'adult_content'),
    'opensearch_attribution' => array(FALSE, 'attribution'),
    'opensearch_contact' => array(TRUE, 'contact'),
    'opensearch_description' => array(TRUE, 'description'),
    'opensearch_longname' => array(TRUE, 'longname'),
    'opensearch_shortname' => array(TRUE, 'shortname'),
    'opensearch_syndication_right' => array(FALSE, 'syndication_right'),
    'opensearch_tags' => array(FALSE, 'tags'),
  );

  $schema['opensearch'] = array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '-default-',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  db_create_table($ret, 'opensearch', $schema['opensearch']);

  foreach ($variables as $var => $info) {
    $value = variable_get($var, NULL);

    if (!empty($value)) {
      if ($info[0]) {
        $value = strtr(
          $value, array('@type' => '[search-name]', '@site' => '[site-name]')
        );
      }

      $settings[$info[1]] = $value;
    }
  }

  if (!empty($settings)) {

    db_query(
      "INSERT INTO {opensearch} (type, settings) VALUES ('%s', '%s')",
      '-default-', serialize($settings)
    );

    variable_del('opensearch_adult_content');
    variable_del('opensearch_attribution');
    variable_del('opensearch_contact');
    variable_del('opensearch_description');
    variable_del('opensearch_longname');
    variable_del('opensearch_shortname');
    variable_del('opensearch_syndication_right');
    variable_del('opensearch_tags');
  }

  $ret[] = array(
    'success' => TRUE,
    'query' => 'Updated the module settings',
  );
  
  $ret[] = array(
    'success' => TRUE,
    'query' => 'The settings page has been moved to ' . check_url(url('admin/settings/search/opensearch', array('absolute' => TRUE))),
  );
  
  if (module_exists('token')) {
    module_enable(array('opensearch_token'));
  
    $ret[] = array(
      'success' => TRUE,
      'query' => 'Enabled the module opensearch_token.module',
    );
  }
  else {
    $ret[] = array(
      'success' => FALSE,
      'query' => 'The module opensearch_token.module has not been enabled as token.module is not enabled; change the settings that use tokens in ' . check_url(url('admin/settings/search/opensearch', array('absolute' => TRUE))),
    );
  }
  
  return $ret;
}
